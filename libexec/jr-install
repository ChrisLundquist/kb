#!/usr/bin/env bash
# Usage: jr install <plugin>[ <plugin> ...]
# Summary: Installs a plugin
# Help: Each <plugin> token can be of the form:
#
#   * <name>
#   * <name>@<tag_version>
#   * <name>:<tarball_url>
#
set -e
[ -n "$JR_DEBUG" ] && set -x

log_heading() { echo "-----> $*" ; }
log_detail()  { echo "       $*" ; }
warn()        { echo ">>>>>> $*" >&2 ; }

plugin_url() {
  local plugin="$1"

  local tag="$(jr-ruby -S jr-github-tags jamie-ci jr-$plugin | grep '^v[0-9]' | tail -n 1)"
  [ -z "$tag" ] && tag="master"
  echo "https://github.com/jamie-ci/jr-${plugin}/archive/${tag}.tar.gz"
}

plugin_with_tag_url() {
  local plugin="$(echo $1 | awk -F'@' '{ print $1 }')"
  local tag="$(echo $1 | awk -F'@' '{ print $2 }')"

  echo "https://github.com/jamie-ci/jr-${plugin}/archive/${tag}.tar.gz"
}

plugin_with_url_url() {
  local plugin="$(echo $1 | awk -F':' '{ print $1 }')"
  local url="$(echo $1 | sed "s|^$plugin:||")"

  echo "$url"
}

install() {
  local token="$1"

  case "$token" in
    *:*)
      local plugin="$(echo $token | awk -F':' '{ print $1 }')"
      local url="$(plugin_with_url_url $token)"
      ;;
    *@*)
      local plugin="$(echo $token | awk -F'@' '{ print $1 }')"
      local url="$(plugin_with_tag_url $token)"
      ;;
    *)
      local plugin="$token"
      local url="$(plugin_url $token)"
      ;;
  esac

  local plugin_path="$_JR_ROOT/plugins/$plugin"

  if [ -d "$plugin_path" ] ; then
    log_detail "$plugin plugin already installed"
    return 0
  fi

  local tar="/tmp/$plugin-$$.tar.gz"

  mkdir -p "$(dirname $plugin_path)"

  ( jr-download "$url" "$tar" && \
    mkdir -p "$plugin_path" && \
    (cd "$plugin_path" ; gunzip -c "$tar" | tar xf - --strip-components=1) && \
    rm -f "$tar" && \
    log_detail "Plugin $plugin installed"
  ) || return 1

  if [ -f "$plugin_path/install.sh" ] ; then
    log_heading "Running install.sh for $plugin plugin"
    "$plugin_path/install.sh"
  fi
}

ecode=0
while [ -n "$1" ] ; do
  if ! install "$1" ; then
    warn "Plugin $1 installation failed"
    ecode=1
  fi
  shift
done

exit $ecode
