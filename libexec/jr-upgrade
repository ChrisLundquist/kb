#!/usr/bin/env bash
# Usage: jr upgrade <plugin>[ <plugin> ...]
# Summary: Upgrades a plugin
# Help: Each <plugin> token can be of the form:
#
#   * <name>
#   * <name>@<tag_version>
#   * <name>:<tarball_url>
#
set -e
[ -n "$JR_DEBUG" ] && set -x

log_heading() { echo "-----> $*" ; }
log_detail()  { echo "       $*" ; }
warn()        { echo ">>>>>> $*" >&2 ; }

upgrade_to_release() {
  local plugin="$1"
  local current="$(jr-plugin-version $plugin --bare)"
  local tag="$(jr-ruby -S jr-github-tags jamie-ci jr-$plugin | grep '^v[0-9]' | tail -n 1 | sed 's/^v//')"
  [ -z "$tag" ] && tag="master"

  if [ "$tag" == "master" ] || [ $(jr-version-compare $current $tag) -lt 0 ] ; then
    log_detail "Upgrading $plugin to version $tag"
    rm -rf "$(jr-pluginpath $plugin)"
    jr-install "$plugin"
  else
    log_detail "Skipping $plugin upgrade (current version: $current)"
  fi
}

upgrade_to_specified() {
  local plugin="$1"
  local token="$2"

  log_detail "Upgrading $plugin to version $token"
  rm -rf "$(jr-pluginpath $plugin)"
  jr-install "$token"
}

upgrade() {
  local token="$1"

  case "$token" in
    *:*)
      local plugin="$(echo $token | awk -F':' '{ print $1 }')"
      local flavor="url"
      ;;
    *@*)
      local plugin="$(echo $token | awk -F'@' '{ print $1 }')"
      local flavor="tag"
      ;;
    *)
      local plugin="$token"
      local flavor="bare"
      ;;
  esac

  local plugin_path="$(jr-pluginpath $plugin)"

  if [ ! -d "$plugin_path" ] ; then
    log_detail "$plugin plugin is not installed"
    return 1
  elif [ "$flavor" == "bare" ] ; then
    upgrade_to_release $plugin
  else
    upgrade_to_specified $plugin $token
  fi
}

ecode=0
while [ -n "$1" ] ; do
  if ! upgrade "$1" ; then
    warn "Plugin $1 upgrade failed"
    ecode=1
  fi
  shift
done

exit $ecode
